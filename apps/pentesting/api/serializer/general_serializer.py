from apps.pentesting.models import *
from rest_framework import serializers
from apps.pentesting.models import Attack

#serializer attack

class attackSerializer(serializers.ModelSerializer):
    class Meta:
        model=Attack
        exclude = ('create_date','modified_date','deleted_date')   
    def to_representation(self,instance):
        return{
            'id':instance.id,
            'service_id':instance.service_id,
            'name':instance.name,
            'description':instance.description,
            'price':instance.price,
            'discount':instance.discount,
            'priceInPacket':instance.price - (instance.price * instance.discount)/100.0 
        }

class attackSearchSerializer(serializers.ModelSerializer):

    class Meta:
        model=Attack        
        exclude = ('create_date','modified_date','deleted_date')


#serializer Category
class CategorySerializer(serializers.ModelSerializer):

    class Meta:
        model=Category
        fields = '__all__'


class PackageSerializer(serializers.ModelSerializer):
    attacks = attackSerializer(many=True,read_only=True)
    #attacks = serializers.StringRelatedField(many=True,read_only=True)
    class Meta:
        model=Package
        exclude = ('create_date','modified_date','deleted_date')
   
class CategorySearchSerializer(serializers.ModelSerializer):

    class Meta:
        model=Category
        exclude = ('create_date','modified_date','deleted_date')

