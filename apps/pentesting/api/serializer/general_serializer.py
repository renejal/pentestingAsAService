from apps.pentesting.models import *
from rest_framework import serializers

#serializer attack

class attackSerializer(serializers.ModelSerializer):
    class Meta:
        model=Attack
        exclude = ('create_date','modified_date','deleted_date')   

class attackSearchSerializer(serializers.ModelSerializer):

    class Meta:
        model=Attack        
        exclude = ('create_date','modified_date','deleted_date')


#serializer Category
class CategorySerializer(serializers.ModelSerializer):

    class Meta:
        model=Category
        fields = '__all__'


class PackageSerializer(serializers.ModelSerializer):
    attacks = serializers.StringRelatedField(many=True)
    class Meta:
        model=Package
        exclude = ('create_date','modified_date','deleted_date')
    
   # def to_representation(self, instance):
   #     return {
   #         'id':instance.id,
   #         'name':instance.name,
   #         'description':instance.description,
   #         'attacks':instance.attacks.id,
   #         'service_id':instance.service_id,
   #         'price':instance.price,

   #     } 

class CategorySearchSerializer(serializers.ModelSerializer):

    class Meta:
        model=Category
        exclude = ('create_date','modified_date','deleted_date')

