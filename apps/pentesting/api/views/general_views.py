from django import http
from rest_framework import generics
from rest_framework import response
from rest_framework.views import APIView
from apps.pentesting.models import Attack
from apps.pentesting.api.serializer.general_serializer import attackSerializer
from django.http import HttpResponse
from rest_framework.response import Response
from django.http import JsonResponse
from rest_framework import status


class AttackListAPIViews(APIView):

    def get(self,request,*args,**kwargs):
        model = Attack.objects.filter(state=True)
        result=attackSerializer(model,many = True).data
        #result.append('custom-header')
        #header={'custom-header':'Access-Control-Allow-Origin: *'}
        result.append({'custom-header':'Access-Control-Allow-Origin: *'})
        #response = JsonResponse(result,status)
        #response['Retry-after'] = 345 # seconds 
        #response['custom-header'] = 'Access-Control-Allow-Origin: *'
        return Response(result,status=status.HTTP_202_ACCEPTED)
        

   # serializer_class = attackSerializer

   # def get_queryset(self):
   #     Result= Attack.objects.filter(state=True)
    #    return Result
"""
    def get_queryset(self):
        Result= Attack.objects.filter(state=True)
        #return Result
            #Result = {'key','value'} # some data
        
        response = JsonResponse(list(Result.values()),status=200)

        response['Retry-after'] = 345 # seconds 
        response['custom-header'] = 'Access-Control-Allow-Origin: *'
        print(response)
        return response

"""
class AttackCreateApiViews(generics.CreateAPIView):
    serializer_class = attackSerializer
    queryset = Attack.objects.all()


class AttackUpdateApiViews(generics.UpdateAPIView):
    serializer_class = attackSerializer
    queryset = Attack.objects.all()

class AttackDeleteApiViews(generics.DestroyAPIView):
    serializer_class = attackSerializer
    queryset = Attack.objects.all()
    

