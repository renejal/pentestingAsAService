from apps.pentesting.models import Attack,Package
from django.db import models
from django.db.models.fields.related import ForeignKey
from apps.base.models import BaseModel
from apps.users.models import User


class Service(BaseModel):
    shooping_carts = models.ManyToManyField(User)
    attack = models.OneToOneField(Attack,on_delete=models.CASCADE,verbose_name='attack',null=True,blank=True)
    package = models.OneToOneField(Package,on_delete=models.CASCADE,verbose_name='package',null=True,blank=True)
    
    class Meta:
        """Meta definition for Product."""
        verbose_name = 'service'
        verbose_name_plural = 'services'

    def __str__(self):
        """Unicode representation of Product."""
        return str(self.id)

class ShoppinCart(BaseModel):
    users = models.ForeignKey(User,on_delete=models.CASCADE,verbose_name="user",blank=False,null=False)
    services = models.ForeignKey(Service,on_delete=models.CASCADE,verbose_name="services",blank=False,null=False)

    class Meta:
        """Meta definition for Product."""
        verbose_name = 'shoppincart'
        verbose_name_plural = 'shoppincarts'

    def __str__(self):
        """Unicode representation of Product."""
        return str(self.id)

class Invoce(BaseModel):
    shoppinCarts = models.ForeignKey(ShoppinCart,on_delete=models.CASCADE,verbose_name="buyservice",blank=False,null=True)

    class Meta:
        """Meta definition for Product."""
        verbose_name = 'Invoce'
        verbose_name_plural = 'Invoces'

    def __str__(self):
        """Unicode representation of Product."""
        return str(self.id)
    
        